- comments: 'A quantity of mosaics in [absolute units](/concepts/mosaic.html#divisibility).

    It can only be positive or zero. Negative quantities must be indicated by other
    means (See for example MosaicSupplyChangeTransaction and MosaicSupplyChangeAction).'
  name: Amount
  signedness: unsigned
  size: 8
  type: byte
- comments: A time lapse, expressed in number of blocks.
  name: BlockDuration
  signedness: unsigned
  size: 8
  type: byte
- comments: 'Multiplier applied to the size of a transaction to obtain its fee, in
    [absolute units](/concepts/mosaic.html#divisibility).

    See the [fees documentation](/concepts/fees.html).'
  name: BlockFeeMultiplier
  signedness: unsigned
  size: 4
  type: byte
- comments: 'How hard it was to harvest this block.

    The initial value is 1e14 and it will remain like this as long as blocks are generated
    every `blockGenerationTargetTime` seconds ([network property](/guides/network/configuring-network-properties.html)).

    If blocks start taking more or less time than the configured value, the difficulty
    will be adjusted (in the range of 1e13 to 1e15) to try to hit the target time.

    See the [Technical Reference](/symbol-technicalref/main.pdf) section 8.1.'
  name: Difficulty
  signedness: unsigned
  size: 8
  type: byte
- comments: 'Index of a [finalization](/concepts/block.html#finalization) epoch.

    The first epoch is number 1 and contains only the first block (the [Nemesis](/concepts/block.html#block-creation)
    block). Epoch duration (in blocks) is defined by the `votingSetGrouping` network
    property.'
  name: FinalizationEpoch
  signedness: unsigned
  size: 4
  type: byte
- comments: 'A particular point in time inside a [finalization](/concepts/block.html#finalization)
    epoch.

    See the [Technical Reference](/symbol-technicalref/main.pdf) section 15.2.'
  name: FinalizationPoint
  signedness: unsigned
  size: 4
  type: byte
- comments: 'Index of a block in the blockchain.

    The first block (the [Nemesis](/concepts/block.html#block-creation) block) has
    height 1 and each subsequent block increases height by 1.'
  name: Height
  signedness: unsigned
  size: 8
  type: byte
- comments: '[Importance score](/concepts/consensus-algorithm.html#importance-score)
    for an account.

    See also ImportanceHeight and ImportanceSnapshot.'
  name: Importance
  signedness: unsigned
  size: 8
  type: byte
- comments: Block height at which an Importance was calculated.
  name: ImportanceHeight
  signedness: unsigned
  size: 8
  type: byte
- comments: 'Either a MosaicId or a NamespaceId.

    The **most**-significant bit of the first byte is 0 for MosaicId''s and 1 for
    NamespaceId''s.'
  name: UnresolvedMosaicId
  signedness: unsigned
  size: 8
  type: byte
- comments: A [Mosaic](/concepts/mosaic.html) identifier.
  name: MosaicId
  signedness: unsigned
  size: 8
  type: byte
- comments: 'Number of milliseconds elapsed since the creation of the [Nemesis](/concepts/block.html#block-creation)
    block.

    The Nemesis block creation time can be found in the `epochAdjustment` field returned
    by the [/network/properties](/symbol-openapi/v1.0.1/#operation/getNetworkProperties)
    REST endpoint. This is the number of seconds elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time)
    and it is always 1615853185 for Symbol''s MAINNET.'
  name: Timestamp
  signedness: unsigned
  size: 8
  type: byte
- comments: 'Either an Address or a NamespaceId.

    The **least**-significant bit of the first byte is 0 for Addresses and 1 for NamespaceId''s.'
  name: UnresolvedAddress
  signedness: unsigned
  size: 24
  type: byte
- comments: An [address](/concepts/cryptography.html#address) identifies an account
    and is derived from its PublicKey.
  name: Address
  signedness: unsigned
  size: 24
  type: byte
- comments: 'A 32-byte (256 bit) hash.

    The exact algorithm is unspecified as it can change depending on where it is used.'
  name: Hash256
  signedness: unsigned
  size: 32
  type: byte
- comments: 'A 64-byte (512 bit) hash.

    The exact algorithm is unspecified as it can change depending on where it is used.'
  name: Hash512
  signedness: unsigned
  size: 64
  type: byte
- comments: 'A 32-byte (256 bit) integer derived from a private key.

    It serves as the public identifier of the [key pair](/concepts/cryptography.html#key-pair)
    and can be disseminated widely. It is used to prove that an entity was signed
    with the paired private key.'
  name: PublicKey
  signedness: unsigned
  size: 32
  type: byte
- comments: A PublicKey used for voting during the [finalization process](/concepts/block.html#finalization).
  name: VotingPublicKey
  signedness: unsigned
  size: 32
  type: byte
- comments: 'A 64-byte (512 bit) array certifying that the signed data has not been
    modified.

    Symbol currently uses [Ed25519](https://ed25519.cr.yp.to/) signatures.'
  name: Signature
  signedness: unsigned
  size: 64
  type: byte
- comments: A quantity of a certain mosaic.
  layout:
  - comments: Mosaic identifier.
    name: mosaic_id
    type: MosaicId
  - comments: Mosaic amount.
    name: amount
    type: Amount
  name: Mosaic
  type: struct
- comments: A quantity of a certain mosaic, specified either through a MosaicId or
    an alias.
  layout:
  - comments: Unresolved mosaic identifier.
    name: mosaic_id
    type: UnresolvedMosaicId
  - comments: Mosaic amount.
    name: amount
    type: Amount
  name: UnresolvedMosaic
  type: struct
- comments: Link actions.
  name: LinkAction
  signedness: unsigned
  size: 1
  type: enum
  values:
  - comments: Unlink an account.
    name: UNLINK
    value: 0
  - comments: Link an account.
    name: LINK
    value: 1
- comments: Enumeration of network types.
  name: NetworkType
  signedness: unsigned
  size: 1
  type: enum
  values:
  - comments: Public network.
    name: MAINNET
    value: 104
  - comments: Public test network.
    name: TESTNET
    value: 152
- comments: Enumeration of Transaction types
  name: TransactionType
  signedness: unsigned
  size: 2
  type: enum
  values:
  - comments: AccountKeyLinkTransaction
    name: ACCOUNT_KEY_LINK
    value: 16716
  - comments: NodeKeyLinkTransaction
    name: NODE_KEY_LINK
    value: 16972
  - comments: AggregateCompleteTransaction
    name: AGGREGATE_COMPLETE
    value: 16705
  - comments: AggregateBondedTransaction
    name: AGGREGATE_BONDED
    value: 16961
  - comments: VotingKeyLinkTransaction
    name: VOTING_KEY_LINK
    value: 16707
  - comments: VrfKeyLinkTransaction
    name: VRF_KEY_LINK
    value: 16963
  - comments: HashLockTransaction
    name: HASH_LOCK
    value: 16712
  - comments: SecretLockTransaction
    name: SECRET_LOCK
    value: 16722
  - comments: SecretProofTransaction
    name: SECRET_PROOF
    value: 16978
  - comments: AccountMetadataTransaction
    name: ACCOUNT_METADATA
    value: 16708
  - comments: MosaicMetadataTransaction
    name: MOSAIC_METADATA
    value: 16964
  - comments: NamespaceMetadataTransaction
    name: NAMESPACE_METADATA
    value: 17220
  - comments: MosaicDefinitionTransaction
    name: MOSAIC_DEFINITION
    value: 16717
  - comments: MosaicSupplyChangeTransaction
    name: MOSAIC_SUPPLY_CHANGE
    value: 16973
  - comments: MosaicSupplyRevocationTransaction
    name: MOSAIC_SUPPLY_REVOCATION
    value: 17229
  - comments: MultisigAccountModificationTransaction
    name: MULTISIG_ACCOUNT_MODIFICATION
    value: 16725
  - comments: AddressAliasTransaction
    name: ADDRESS_ALIAS
    value: 16974
  - comments: MosaicAliasTransaction
    name: MOSAIC_ALIAS
    value: 17230
  - comments: NamespaceRegistrationTransaction
    name: NAMESPACE_REGISTRATION
    value: 16718
  - comments: AccountAddressRestrictionTransaction
    name: ACCOUNT_ADDRESS_RESTRICTION
    value: 16720
  - comments: AccountMosaicRestrictionTransaction
    name: ACCOUNT_MOSAIC_RESTRICTION
    value: 16976
  - comments: AccountOperationRestrictionTransaction
    name: ACCOUNT_OPERATION_RESTRICTION
    value: 17232
  - comments: MosaicAddressRestrictionTransaction
    name: MOSAIC_ADDRESS_RESTRICTION
    value: 16977
  - comments: MosaicGlobalRestrictionTransaction
    name: MOSAIC_GLOBAL_RESTRICTION
    value: 16721
  - comments: TransferTransaction
    name: TRANSFER
    value: 16724
- comments: binary layout for a transaction
  discriminator:
  - type
  disposition: abstract
  initializers:
  - target_property_name: version
    value: TRANSACTION_VERSION
  - target_property_name: type
    value: TRANSACTION_TYPE
  layout:
  - comments: 'Entity size in bytes.

      This size includes the header and the full payload of the entity. I.e, the size
      field matches the size reported in the structure documentation (plus the variable
      part, if there is any).'
    name: size
    signedness: unsigned
    size: 4
    type: byte
  - comments: Reserved padding to align Signature to an 8-byte boundary.
    disposition: reserved
    name: verifiable_entity_header_reserved_1
    signedness: unsigned
    size: 4
    type: byte
    value: 0
  - comments: Entity's signature generated by the signing account.
    name: signature
    type: Signature
  - comments: Public key of the signer of the entity.
    name: signer_public_key
    type: PublicKey
  - comments: Reserved padding to align end of EntityBody to an 8-byte boundary.
    disposition: reserved
    name: entity_body_reserved_1
    signedness: unsigned
    size: 4
    type: byte
    value: 0
  - comments: Version of this structure.
    name: version
    signedness: unsigned
    size: 1
    type: byte
  - comments: Network on which this entity was created.
    name: network
    type: NetworkType
  - comments: transaction type
    name: type
    type: TransactionType
  - comments: transaction fee
    name: fee
    type: Amount
  - comments: transaction deadline
    name: deadline
    type: Timestamp
  name: Transaction
  size: size
  type: struct
- comments: binary layout for an embedded transaction
  discriminator:
  - type
  disposition: abstract
  initializers:
  - target_property_name: version
    value: TRANSACTION_VERSION
  - target_property_name: type
    value: TRANSACTION_TYPE
  layout:
  - comments: 'Entity size in bytes.

      This size includes the header and the full payload of the entity. I.e, the size
      field matches the size reported in the structure documentation (plus the variable
      part, if there is any).'
    name: size
    signedness: unsigned
    size: 4
    type: byte
  - comments: reserved padding to align end of EmbeddedTransactionHeader on 8-byte
      boundary
    disposition: reserved
    name: embedded_transaction_header_reserved_1
    signedness: unsigned
    size: 4
    type: byte
    value: 0
  - comments: Public key of the signer of the entity.
    name: signer_public_key
    type: PublicKey
  - comments: Reserved padding to align end of EntityBody to an 8-byte boundary.
    disposition: reserved
    name: entity_body_reserved_1
    signedness: unsigned
    size: 4
    type: byte
    value: 0
  - comments: Version of this structure.
    name: version
    signedness: unsigned
    size: 1
    type: byte
  - comments: Network on which this entity was created.
    name: network
    type: NetworkType
  - comments: transaction type
    name: type
    type: TransactionType
  name: EmbeddedTransaction
  size: size
  type: struct
- comments: 'Associate a key-value state ([metadata](/concepts/metadata.html)) to
    an **account**.

    \note This transaction must **always** be wrapped in an AggregateTransaction so
    that a cosignature from `target_address` can be provided. Without this cosignature
    the transaction is invalid.

    Compare to MosaicMetadataTransaction and NamespaceMetadataTransaction.'
  discriminator:
  - type
  factory_type: Transaction
  initializers:
  - target_property_name: version
    value: TRANSACTION_VERSION
  - target_property_name: type
    value: TRANSACTION_TYPE
  layout:
  - disposition: const
    name: TRANSACTION_VERSION
    signedness: unsigned
    size: 1
    type: byte
    value: 1
  - disposition: const
    name: TRANSACTION_TYPE
    type: TransactionType
    value: ACCOUNT_METADATA
  - comments: 'Entity size in bytes.

      This size includes the header and the full payload of the entity. I.e, the size
      field matches the size reported in the structure documentation (plus the variable
      part, if there is any).'
    name: size
    signedness: unsigned
    size: 4
    type: byte
  - comments: Reserved padding to align Signature to an 8-byte boundary.
    disposition: reserved
    name: verifiable_entity_header_reserved_1
    signedness: unsigned
    size: 4
    type: byte
    value: 0
  - comments: Entity's signature generated by the signing account.
    name: signature
    type: Signature
  - comments: Public key of the signer of the entity.
    name: signer_public_key
    type: PublicKey
  - comments: Reserved padding to align end of EntityBody to an 8-byte boundary.
    disposition: reserved
    name: entity_body_reserved_1
    signedness: unsigned
    size: 4
    type: byte
    value: 0
  - comments: Version of this structure.
    name: version
    signedness: unsigned
    size: 1
    type: byte
  - comments: Network on which this entity was created.
    name: network
    type: NetworkType
  - comments: transaction type
    name: type
    type: TransactionType
  - comments: transaction fee
    name: fee
    type: Amount
  - comments: transaction deadline
    name: deadline
    type: Timestamp
  - comments: Account whose metadata should be modified.
    name: target_address
    type: UnresolvedAddress
  - comments: Metadata key scoped to source, target and type.
    name: scoped_metadata_key
    signedness: unsigned
    size: 8
    type: byte
  - comments: Change in value size in bytes, compared to previous size.
    name: value_size_delta
    signedness: signed
    size: 2
    type: byte
  - comments: Size in bytes of the `value` array.
    name: value_size
    signedness: unsigned
    size: 2
    type: byte
  - comments: Difference between existing value and new value. \note When there is
      no existing value, this array is directly used and `value_size_delta`==`value_size`.
      \note When there is an existing value, the new value is the byte-wise XOR of
      the previous value and this array.
    disposition: array
    element_disposition:
      signedness: unsigned
      size: 1
    name: value
    size: value_size
    type: byte
  name: AccountMetadataTransaction
  size: size
  type: struct
- comments: Embedded version of AccountMetadataTransaction.
  discriminator:
  - type
  factory_type: EmbeddedTransaction
  initializers:
  - target_property_name: version
    value: TRANSACTION_VERSION
  - target_property_name: type
    value: TRANSACTION_TYPE
  layout:
  - disposition: const
    name: TRANSACTION_VERSION
    signedness: unsigned
    size: 1
    type: byte
    value: 1
  - disposition: const
    name: TRANSACTION_TYPE
    type: TransactionType
    value: ACCOUNT_METADATA
  - comments: 'Entity size in bytes.

      This size includes the header and the full payload of the entity. I.e, the size
      field matches the size reported in the structure documentation (plus the variable
      part, if there is any).'
    name: size
    signedness: unsigned
    size: 4
    type: byte
  - comments: reserved padding to align end of EmbeddedTransactionHeader on 8-byte
      boundary
    disposition: reserved
    name: embedded_transaction_header_reserved_1
    signedness: unsigned
    size: 4
    type: byte
    value: 0
  - comments: Public key of the signer of the entity.
    name: signer_public_key
    type: PublicKey
  - comments: Reserved padding to align end of EntityBody to an 8-byte boundary.
    disposition: reserved
    name: entity_body_reserved_1
    signedness: unsigned
    size: 4
    type: byte
    value: 0
  - comments: Version of this structure.
    name: version
    signedness: unsigned
    size: 1
    type: byte
  - comments: Network on which this entity was created.
    name: network
    type: NetworkType
  - comments: transaction type
    name: type
    type: TransactionType
  - comments: Account whose metadata should be modified.
    name: target_address
    type: UnresolvedAddress
  - comments: Metadata key scoped to source, target and type.
    name: scoped_metadata_key
    signedness: unsigned
    size: 8
    type: byte
  - comments: Change in value size in bytes, compared to previous size.
    name: value_size_delta
    signedness: signed
    size: 2
    type: byte
  - comments: Size in bytes of the `value` array.
    name: value_size
    signedness: unsigned
    size: 2
    type: byte
  - comments: Difference between existing value and new value. \note When there is
      no existing value, this array is directly used and `value_size_delta`==`value_size`.
      \note When there is an existing value, the new value is the byte-wise XOR of
      the previous value and this array.
    disposition: array
    element_disposition:
      signedness: unsigned
      size: 1
    name: value
    size: value_size
    type: byte
  name: EmbeddedAccountMetadataTransaction
  size: size
  type: struct
