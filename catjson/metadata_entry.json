[
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Amount", 
    "comments": "A quantity of mosaics in [absolute units](/concepts/mosaic.html#divisibility).\nIt can only be positive or zero. Negative quantities must be indicated by other means (See for example MosaicSupplyChangeTransaction and MosaicSupplyChangeAction).", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "BlockDuration", 
    "comments": "A time lapse, expressed in number of blocks.", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "BlockFeeMultiplier", 
    "comments": "Multiplier applied to the size of a transaction to obtain its fee, in [absolute units](/concepts/mosaic.html#divisibility).\nSee the [fees documentation](/concepts/fees.html).", 
    "size": 4
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Difficulty", 
    "comments": "How hard it was to harvest this block.\nThe initial value is 1e14 and it will remain like this as long as blocks are generated every `blockGenerationTargetTime` seconds ([network property](/guides/network/configuring-network-properties.html)).\nIf blocks start taking more or less time than the configured value, the difficulty will be adjusted (in the range of 1e13 to 1e15) to try to hit the target time.\nSee the [Technical Reference](/symbol-technicalref/main.pdf) section 8.1.", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "FinalizationEpoch", 
    "comments": "Index of a [finalization](/concepts/block.html#finalization) epoch.\nThe first epoch is number 1 and contains only the first block (the [Nemesis](/concepts/block.html#block-creation) block). Epoch duration (in blocks) is defined by the `votingSetGrouping` network property.", 
    "size": 4
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "FinalizationPoint", 
    "comments": "A particular point in time inside a [finalization](/concepts/block.html#finalization) epoch.\nSee the [Technical Reference](/symbol-technicalref/main.pdf) section 15.2.", 
    "size": 4
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Height", 
    "comments": "Index of a block in the blockchain.\nThe first block (the [Nemesis](/concepts/block.html#block-creation) block) has height 1 and each subsequent block increases height by 1.", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Importance", 
    "comments": "[Importance score](/concepts/consensus-algorithm.html#importance-score) for an account.\nSee also ImportanceHeight and ImportanceSnapshot.", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "ImportanceHeight", 
    "comments": "Block height at which an Importance was calculated.", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "UnresolvedMosaicId", 
    "comments": "Either a MosaicId or a NamespaceId.\nThe **most**-significant bit of the first byte is 0 for MosaicId's and 1 for NamespaceId's.", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "MosaicId", 
    "comments": "A [Mosaic](/concepts/mosaic.html) identifier.", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Timestamp", 
    "comments": "Number of milliseconds elapsed since the creation of the [Nemesis](/concepts/block.html#block-creation) block.\nThe Nemesis block creation time can be found in the `epochAdjustment` field returned by the [/network/properties](/symbol-openapi/v1.0.1/#operation/getNetworkProperties) REST endpoint. This is the number of seconds elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time) and it is always 1615853185 for Symbol's MAINNET.", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "UnresolvedAddress", 
    "comments": "Either an Address or a NamespaceId.\nThe **least**-significant bit of the first byte is 0 for Addresses and 1 for NamespaceId's.", 
    "size": 24
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Address", 
    "comments": "An [address](/concepts/cryptography.html#address) identifies an account and is derived from its PublicKey.", 
    "size": 24
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Hash256", 
    "comments": "A 32-byte (256 bit) hash.\nThe exact algorithm is unspecified as it can change depending on where it is used.", 
    "size": 32
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Hash512", 
    "comments": "A 64-byte (512 bit) hash.\nThe exact algorithm is unspecified as it can change depending on where it is used.", 
    "size": 64
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "PublicKey", 
    "comments": "A 32-byte (256 bit) integer derived from a private key.\nIt serves as the public identifier of the [key pair](/concepts/cryptography.html#key-pair) and can be disseminated widely. It is used to prove that an entity was signed with the paired private key.", 
    "size": 32
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "VotingPublicKey", 
    "comments": "A PublicKey used for voting during the [finalization process](/concepts/block.html#finalization).", 
    "size": 32
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Signature", 
    "comments": "A 64-byte (512 bit) array certifying that the signed data has not been modified.\nSymbol currently uses [Ed25519](https://ed25519.cr.yp.to/) signatures.", 
    "size": 64
  }, 
  {
    "layout": [
      {
        "type": "MosaicId", 
        "name": "mosaic_id", 
        "comments": "Mosaic identifier."
      }, 
      {
        "type": "Amount", 
        "name": "amount", 
        "comments": "Mosaic amount."
      }
    ], 
    "type": "struct", 
    "name": "Mosaic", 
    "comments": "A quantity of a certain mosaic."
  }, 
  {
    "layout": [
      {
        "type": "UnresolvedMosaicId", 
        "name": "mosaic_id", 
        "comments": "Unresolved mosaic identifier."
      }, 
      {
        "type": "Amount", 
        "name": "amount", 
        "comments": "Mosaic amount."
      }
    ], 
    "type": "struct", 
    "name": "UnresolvedMosaic", 
    "comments": "A quantity of a certain mosaic, specified either through a MosaicId or an alias."
  }, 
  {
    "values": [
      {
        "name": "UNLINK", 
        "value": 0, 
        "comments": "Unlink an account."
      }, 
      {
        "name": "LINK", 
        "value": 1, 
        "comments": "Link an account."
      }
    ], 
    "name": "LinkAction", 
    "signedness": "unsigned", 
    "type": "enum", 
    "comments": "Link actions.", 
    "size": 1
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "ScopedMetadataKey", 
    "size": 8
  }, 
  {
    "values": [
      {
        "name": "ACCOUNT", 
        "value": 0, 
        "comments": "account metadata"
      }, 
      {
        "name": "MOSAIC", 
        "value": 1, 
        "comments": "mosaic metadata"
      }, 
      {
        "name": "NAMESPACE", 
        "value": 2, 
        "comments": "namespace metadata"
      }
    ], 
    "name": "MetadataType", 
    "signedness": "unsigned", 
    "type": "enum", 
    "comments": "enum for the different types of metadata", 
    "size": 1
  }, 
  {
    "layout": [
      {
        "signedness": "unsigned", 
        "type": "byte", 
        "name": "size", 
        "comments": "size of the value", 
        "size": 2
      }, 
      {
        "name": "data", 
        "disposition": "array", 
        "size": "size", 
        "type": "byte", 
        "comments": "data of the value", 
        "element_disposition": {
          "signedness": "unsigned", 
          "size": 1
        }
      }
    ], 
    "type": "struct", 
    "name": "MetadataValue", 
    "comments": "binary layout of a metadata entry value"
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "NamespaceId", 
    "size": 8
  }, 
  {
    "values": [
      {
        "name": "ROOT", 
        "value": 0, 
        "comments": "Root namespace."
      }, 
      {
        "name": "CHILD", 
        "value": 1, 
        "comments": "Child namespace."
      }
    ], 
    "name": "NamespaceRegistrationType", 
    "signedness": "unsigned", 
    "type": "enum", 
    "comments": "Enumeration of namespace registration types.", 
    "size": 1
  }, 
  {
    "values": [
      {
        "name": "UNLINK", 
        "value": 0, 
        "comments": "Unlink a namespace, removing the alias."
      }, 
      {
        "name": "LINK", 
        "value": 1, 
        "comments": "Link a namespace, creating an alias."
      }
    ], 
    "name": "AliasAction", 
    "signedness": "unsigned", 
    "type": "enum", 
    "comments": "Enumeration of alias actions.", 
    "size": 1
  }, 
  {
    "layout": [
      {
        "signedness": "unsigned", 
        "type": "byte", 
        "name": "version", 
        "comments": "serialization version", 
        "size": 2
      }, 
      {
        "type": "Address", 
        "name": "source_address", 
        "comments": "metadata source address (provider)"
      }, 
      {
        "type": "Address", 
        "name": "target_address", 
        "comments": "metadata target address"
      }, 
      {
        "type": "ScopedMetadataKey", 
        "name": "scoped_metadata_key", 
        "comments": "metadata key scoped to source, target and type"
      }, 
      {
        "signedness": "unsigned", 
        "type": "byte", 
        "name": "target_id", 
        "comments": "target id", 
        "size": 8
      }, 
      {
        "type": "MetadataType", 
        "name": "metadata_type", 
        "comments": "metadata type"
      }, 
      {
        "type": "MetadataValue", 
        "name": "value", 
        "comments": "value"
      }
    ], 
    "type": "struct", 
    "name": "MetadataEntry", 
    "comments": "binary layout of a metadata entry"
  }
]