[
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Amount", 
    "comments": "A quantity of mosaics in [absolute units](/concepts/mosaic.html#divisibility).\nIt can only be positive or zero. Negative quantities must be indicated by other means (See for example MosaicSupplyChangeTransaction and MosaicSupplyChangeAction).", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "BlockDuration", 
    "comments": "A time lapse, expressed in number of blocks.", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "BlockFeeMultiplier", 
    "comments": "Multiplier applied to the size of a transaction to obtain its fee, in [absolute units](/concepts/mosaic.html#divisibility).\nSee the [fees documentation](/concepts/fees.html).", 
    "size": 4
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Difficulty", 
    "comments": "How hard it was to harvest this block.\nThe initial value is 1e14 and it will remain like this as long as blocks are generated every `blockGenerationTargetTime` seconds ([network property](/guides/network/configuring-network-properties.html)).\nIf blocks start taking more or less time than the configured value, the difficulty will be adjusted (in the range of 1e13 to 1e15) to try to hit the target time.\nSee the [Technical Reference](/symbol-technicalref/main.pdf) section 8.1.", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "FinalizationEpoch", 
    "comments": "Index of a [finalization](/concepts/block.html#finalization) epoch.\nThe first epoch is number 1 and contains only the first block (the [Nemesis](/concepts/block.html#block-creation) block). Epoch duration (in blocks) is defined by the `votingSetGrouping` network property.", 
    "size": 4
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "FinalizationPoint", 
    "comments": "A particular point in time inside a [finalization](/concepts/block.html#finalization) epoch.\nSee the [Technical Reference](/symbol-technicalref/main.pdf) section 15.2.", 
    "size": 4
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Height", 
    "comments": "Index of a block in the blockchain.\nThe first block (the [Nemesis](/concepts/block.html#block-creation) block) has height 1 and each subsequent block increases height by 1.", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Importance", 
    "comments": "[Importance score](/concepts/consensus-algorithm.html#importance-score) for an account.\nSee also ImportanceHeight and ImportanceSnapshot.", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "ImportanceHeight", 
    "comments": "Block height at which an Importance was calculated.", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "UnresolvedMosaicId", 
    "comments": "Either a MosaicId or a NamespaceId.\nThe **most**-significant bit of the first byte is 0 for MosaicId's and 1 for NamespaceId's.", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "MosaicId", 
    "comments": "A [Mosaic](/concepts/mosaic.html) identifier.", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Timestamp", 
    "comments": "Number of milliseconds elapsed since the creation of the [Nemesis](/concepts/block.html#block-creation) block.\nThe Nemesis block creation time can be found in the `epochAdjustment` field returned by the [/network/properties](/symbol-openapi/v1.0.1/#operation/getNetworkProperties) REST endpoint. This is the number of seconds elapsed since the [UNIX epoch](https://en.wikipedia.org/wiki/Unix_time) and it is always 1615853185 for Symbol's MAINNET.", 
    "size": 8
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "UnresolvedAddress", 
    "comments": "Either an Address or a NamespaceId.\nThe **least**-significant bit of the first byte is 0 for Addresses and 1 for NamespaceId's.", 
    "size": 24
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Address", 
    "comments": "An [address](/concepts/cryptography.html#address) identifies an account and is derived from its PublicKey.", 
    "size": 24
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Hash256", 
    "comments": "A 32-byte (256 bit) hash.\nThe exact algorithm is unspecified as it can change depending on where it is used.", 
    "size": 32
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Hash512", 
    "comments": "A 64-byte (512 bit) hash.\nThe exact algorithm is unspecified as it can change depending on where it is used.", 
    "size": 64
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "PublicKey", 
    "comments": "A 32-byte (256 bit) integer derived from a private key.\nIt serves as the public identifier of the [key pair](/concepts/cryptography.html#key-pair) and can be disseminated widely. It is used to prove that an entity was signed with the paired private key.", 
    "size": 32
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "VotingPublicKey", 
    "comments": "A PublicKey used for voting during the [finalization process](/concepts/block.html#finalization).", 
    "size": 32
  }, 
  {
    "signedness": "unsigned", 
    "type": "byte", 
    "name": "Signature", 
    "comments": "A 64-byte (512 bit) array certifying that the signed data has not been modified.\nSymbol currently uses [Ed25519](https://ed25519.cr.yp.to/) signatures.", 
    "size": 64
  }, 
  {
    "layout": [
      {
        "type": "MosaicId", 
        "name": "mosaic_id", 
        "comments": "Mosaic identifier."
      }, 
      {
        "type": "Amount", 
        "name": "amount", 
        "comments": "Mosaic amount."
      }
    ], 
    "type": "struct", 
    "name": "Mosaic", 
    "comments": "A quantity of a certain mosaic."
  }, 
  {
    "layout": [
      {
        "type": "UnresolvedMosaicId", 
        "name": "mosaic_id", 
        "comments": "Unresolved mosaic identifier."
      }, 
      {
        "type": "Amount", 
        "name": "amount", 
        "comments": "Mosaic amount."
      }
    ], 
    "type": "struct", 
    "name": "UnresolvedMosaic", 
    "comments": "A quantity of a certain mosaic, specified either through a MosaicId or an alias."
  }, 
  {
    "values": [
      {
        "name": "UNLINK", 
        "value": 0, 
        "comments": "Unlink an account."
      }, 
      {
        "name": "LINK", 
        "value": 1, 
        "comments": "Link an account."
      }
    ], 
    "name": "LinkAction", 
    "signedness": "unsigned", 
    "type": "enum", 
    "comments": "Link actions.", 
    "size": 1
  }, 
  {
    "layout": [
      {
        "signedness": "unsigned", 
        "type": "byte", 
        "name": "version", 
        "comments": "Version.", 
        "size": 8
      }, 
      {
        "type": "PublicKey", 
        "name": "signer_public_key", 
        "comments": "Cosigner public key."
      }, 
      {
        "type": "Signature", 
        "name": "signature", 
        "comments": "Transaction signature."
      }
    ], 
    "type": "struct", 
    "name": "Cosignature", 
    "comments": "Cosignature attached to an AggregateCompleteTransaction or AggregateBondedTransaction."
  }, 
  {
    "layout": [
      {
        "signedness": "unsigned", 
        "type": "byte", 
        "name": "version", 
        "comments": "Version.", 
        "size": 8
      }, 
      {
        "type": "PublicKey", 
        "name": "signer_public_key", 
        "comments": "Cosigner public key."
      }, 
      {
        "type": "Signature", 
        "name": "signature", 
        "comments": "Transaction signature."
      }, 
      {
        "type": "Hash256", 
        "name": "parent_hash", 
        "comments": "Hash of the AggregateBondedTransaction that is signed by this cosignature."
      }
    ], 
    "type": "struct", 
    "name": "DetachedCosignature", 
    "comments": "Cosignature detached from an AggregateCompleteTransaction or AggregateBondedTransaction."
  }, 
  {
    "values": [
      {
        "name": "MAINNET", 
        "value": 104, 
        "comments": "Public network."
      }, 
      {
        "name": "TESTNET", 
        "value": 152, 
        "comments": "Public test network."
      }
    ], 
    "name": "NetworkType", 
    "signedness": "unsigned", 
    "type": "enum", 
    "comments": "Enumeration of network types.", 
    "size": 1
  }, 
  {
    "values": [
      {
        "name": "ACCOUNT_KEY_LINK", 
        "value": 16716, 
        "comments": "AccountKeyLinkTransaction"
      }, 
      {
        "name": "NODE_KEY_LINK", 
        "value": 16972, 
        "comments": "NodeKeyLinkTransaction"
      }, 
      {
        "name": "AGGREGATE_COMPLETE", 
        "value": 16705, 
        "comments": "AggregateCompleteTransaction"
      }, 
      {
        "name": "AGGREGATE_BONDED", 
        "value": 16961, 
        "comments": "AggregateBondedTransaction"
      }, 
      {
        "name": "VOTING_KEY_LINK", 
        "value": 16707, 
        "comments": "VotingKeyLinkTransaction"
      }, 
      {
        "name": "VRF_KEY_LINK", 
        "value": 16963, 
        "comments": "VrfKeyLinkTransaction"
      }, 
      {
        "name": "HASH_LOCK", 
        "value": 16712, 
        "comments": "HashLockTransaction"
      }, 
      {
        "name": "SECRET_LOCK", 
        "value": 16722, 
        "comments": "SecretLockTransaction"
      }, 
      {
        "name": "SECRET_PROOF", 
        "value": 16978, 
        "comments": "SecretProofTransaction"
      }, 
      {
        "name": "ACCOUNT_METADATA", 
        "value": 16708, 
        "comments": "AccountMetadataTransaction"
      }, 
      {
        "name": "MOSAIC_METADATA", 
        "value": 16964, 
        "comments": "MosaicMetadataTransaction"
      }, 
      {
        "name": "NAMESPACE_METADATA", 
        "value": 17220, 
        "comments": "NamespaceMetadataTransaction"
      }, 
      {
        "name": "MOSAIC_DEFINITION", 
        "value": 16717, 
        "comments": "MosaicDefinitionTransaction"
      }, 
      {
        "name": "MOSAIC_SUPPLY_CHANGE", 
        "value": 16973, 
        "comments": "MosaicSupplyChangeTransaction"
      }, 
      {
        "name": "MOSAIC_SUPPLY_REVOCATION", 
        "value": 17229, 
        "comments": "MosaicSupplyRevocationTransaction"
      }, 
      {
        "name": "MULTISIG_ACCOUNT_MODIFICATION", 
        "value": 16725, 
        "comments": "MultisigAccountModificationTransaction"
      }, 
      {
        "name": "ADDRESS_ALIAS", 
        "value": 16974, 
        "comments": "AddressAliasTransaction"
      }, 
      {
        "name": "MOSAIC_ALIAS", 
        "value": 17230, 
        "comments": "MosaicAliasTransaction"
      }, 
      {
        "name": "NAMESPACE_REGISTRATION", 
        "value": 16718, 
        "comments": "NamespaceRegistrationTransaction"
      }, 
      {
        "name": "ACCOUNT_ADDRESS_RESTRICTION", 
        "value": 16720, 
        "comments": "AccountAddressRestrictionTransaction"
      }, 
      {
        "name": "ACCOUNT_MOSAIC_RESTRICTION", 
        "value": 16976, 
        "comments": "AccountMosaicRestrictionTransaction"
      }, 
      {
        "name": "ACCOUNT_OPERATION_RESTRICTION", 
        "value": 17232, 
        "comments": "AccountOperationRestrictionTransaction"
      }, 
      {
        "name": "MOSAIC_ADDRESS_RESTRICTION", 
        "value": 16977, 
        "comments": "MosaicAddressRestrictionTransaction"
      }, 
      {
        "name": "MOSAIC_GLOBAL_RESTRICTION", 
        "value": 16721, 
        "comments": "MosaicGlobalRestrictionTransaction"
      }, 
      {
        "name": "TRANSFER", 
        "value": 16724, 
        "comments": "TransferTransaction"
      }
    ], 
    "name": "TransactionType", 
    "signedness": "unsigned", 
    "type": "enum", 
    "comments": "Enumeration of Transaction types", 
    "size": 2
  }, 
  {
    "layout": [
      {
        "signedness": "unsigned", 
        "type": "byte", 
        "name": "size", 
        "comments": "Entity size in bytes.\nThis size includes the header and the full payload of the entity. I.e, the size field matches the size reported in the structure documentation (plus the variable part, if there is any).", 
        "size": 4
      }, 
      {
        "value": 0, 
        "name": "verifiable_entity_header_reserved_1", 
        "disposition": "reserved", 
        "signedness": "unsigned", 
        "type": "byte", 
        "comments": "Reserved padding to align Signature to an 8-byte boundary.", 
        "size": 4
      }, 
      {
        "type": "Signature", 
        "name": "signature", 
        "comments": "Entity's signature generated by the signing account."
      }, 
      {
        "type": "PublicKey", 
        "name": "signer_public_key", 
        "comments": "Public key of the signer of the entity."
      }, 
      {
        "value": 0, 
        "name": "entity_body_reserved_1", 
        "disposition": "reserved", 
        "signedness": "unsigned", 
        "type": "byte", 
        "comments": "Reserved padding to align end of EntityBody to an 8-byte boundary.", 
        "size": 4
      }, 
      {
        "signedness": "unsigned", 
        "type": "byte", 
        "name": "version", 
        "comments": "Version of this structure.", 
        "size": 1
      }, 
      {
        "type": "NetworkType", 
        "name": "network", 
        "comments": "Network on which this entity was created."
      }, 
      {
        "type": "TransactionType", 
        "name": "type", 
        "comments": "transaction type"
      }, 
      {
        "type": "Amount", 
        "name": "fee", 
        "comments": "transaction fee"
      }, 
      {
        "type": "Timestamp", 
        "name": "deadline", 
        "comments": "transaction deadline"
      }
    ], 
    "name": "Transaction", 
    "comments": "binary layout for a transaction", 
    "initializers": [
      {
        "target_property_name": "version", 
        "value": "TRANSACTION_VERSION"
      }, 
      {
        "target_property_name": "type", 
        "value": "TRANSACTION_TYPE"
      }
    ], 
    "disposition": "abstract", 
    "discriminator": [
      "type"
    ], 
    "type": "struct", 
    "size": "size"
  }, 
  {
    "layout": [
      {
        "signedness": "unsigned", 
        "type": "byte", 
        "name": "size", 
        "comments": "Entity size in bytes.\nThis size includes the header and the full payload of the entity. I.e, the size field matches the size reported in the structure documentation (plus the variable part, if there is any).", 
        "size": 4
      }, 
      {
        "value": 0, 
        "name": "embedded_transaction_header_reserved_1", 
        "disposition": "reserved", 
        "signedness": "unsigned", 
        "type": "byte", 
        "comments": "reserved padding to align end of EmbeddedTransactionHeader on 8-byte boundary", 
        "size": 4
      }, 
      {
        "type": "PublicKey", 
        "name": "signer_public_key", 
        "comments": "Public key of the signer of the entity."
      }, 
      {
        "value": 0, 
        "name": "entity_body_reserved_1", 
        "disposition": "reserved", 
        "signedness": "unsigned", 
        "type": "byte", 
        "comments": "Reserved padding to align end of EntityBody to an 8-byte boundary.", 
        "size": 4
      }, 
      {
        "signedness": "unsigned", 
        "type": "byte", 
        "name": "version", 
        "comments": "Version of this structure.", 
        "size": 1
      }, 
      {
        "type": "NetworkType", 
        "name": "network", 
        "comments": "Network on which this entity was created."
      }, 
      {
        "type": "TransactionType", 
        "name": "type", 
        "comments": "transaction type"
      }
    ], 
    "name": "EmbeddedTransaction", 
    "comments": "binary layout for an embedded transaction", 
    "initializers": [
      {
        "target_property_name": "version", 
        "value": "TRANSACTION_VERSION"
      }, 
      {
        "target_property_name": "type", 
        "value": "TRANSACTION_TYPE"
      }
    ], 
    "disposition": "abstract", 
    "discriminator": [
      "type"
    ], 
    "type": "struct", 
    "size": "size"
  }, 
  {
    "layout": [
      {
        "name": "TRANSACTION_VERSION", 
        "disposition": "const", 
        "signedness": "unsigned", 
        "type": "byte", 
        "value": 1, 
        "size": 1
      }, 
      {
        "disposition": "const", 
        "type": "TransactionType", 
        "name": "TRANSACTION_TYPE", 
        "value": "AGGREGATE_COMPLETE"
      }, 
      {
        "signedness": "unsigned", 
        "type": "byte", 
        "name": "size", 
        "comments": "Entity size in bytes.\nThis size includes the header and the full payload of the entity. I.e, the size field matches the size reported in the structure documentation (plus the variable part, if there is any).", 
        "size": 4
      }, 
      {
        "value": 0, 
        "name": "verifiable_entity_header_reserved_1", 
        "disposition": "reserved", 
        "signedness": "unsigned", 
        "type": "byte", 
        "comments": "Reserved padding to align Signature to an 8-byte boundary.", 
        "size": 4
      }, 
      {
        "type": "Signature", 
        "name": "signature", 
        "comments": "Entity's signature generated by the signing account."
      }, 
      {
        "type": "PublicKey", 
        "name": "signer_public_key", 
        "comments": "Public key of the signer of the entity."
      }, 
      {
        "value": 0, 
        "name": "entity_body_reserved_1", 
        "disposition": "reserved", 
        "signedness": "unsigned", 
        "type": "byte", 
        "comments": "Reserved padding to align end of EntityBody to an 8-byte boundary.", 
        "size": 4
      }, 
      {
        "signedness": "unsigned", 
        "type": "byte", 
        "name": "version", 
        "comments": "Version of this structure.", 
        "size": 1
      }, 
      {
        "type": "NetworkType", 
        "name": "network", 
        "comments": "Network on which this entity was created."
      }, 
      {
        "type": "TransactionType", 
        "name": "type", 
        "comments": "transaction type"
      }, 
      {
        "type": "Amount", 
        "name": "fee", 
        "comments": "transaction fee"
      }, 
      {
        "type": "Timestamp", 
        "name": "deadline", 
        "comments": "transaction deadline"
      }, 
      {
        "type": "Hash256", 
        "name": "transactions_hash", 
        "comments": "Hash of the aggregate's transaction."
      }, 
      {
        "signedness": "unsigned", 
        "type": "byte", 
        "name": "payload_size", 
        "comments": "Transaction payload size in bytes.\nThis is the total number of bytes occupied by all embedded transactions, including any padding present.", 
        "size": 4
      }, 
      {
        "value": 0, 
        "name": "aggregate_transaction_header_reserved_1", 
        "disposition": "reserved", 
        "signedness": "unsigned", 
        "type": "byte", 
        "comments": "Reserved padding to align end of AggregateTransactionHeader to an 8-byte boundary.", 
        "size": 4
      }, 
      {
        "name": "transactions", 
        "disposition": "array sized", 
        "alignment": 8, 
        "type": "EmbeddedTransaction", 
        "comments": "Embedded transaction data.\nTransactions are variable-sized and the total payload size is in bytes.\nEmbedded transactions cannot be aggregates.", 
        "size": "payload_size"
      }, 
      {
        "name": "cosignatures", 
        "type": "Cosignature", 
        "comments": "Cosignatures data.\nFills up remaining body space after transactions.", 
        "disposition": "array fill", 
        "size": 0
      }
    ], 
    "factory_type": "Transaction", 
    "comments": "Send transactions in batches to different accounts.\nUse this transaction when all required signatures are available when the transaction is created.", 
    "name": "AggregateCompleteTransaction", 
    "initializers": [
      {
        "target_property_name": "version", 
        "value": "TRANSACTION_VERSION"
      }, 
      {
        "target_property_name": "type", 
        "value": "TRANSACTION_TYPE"
      }
    ], 
    "discriminator": [
      "type"
    ], 
    "type": "struct", 
    "size": "size"
  }, 
  {
    "layout": [
      {
        "name": "TRANSACTION_VERSION", 
        "disposition": "const", 
        "signedness": "unsigned", 
        "type": "byte", 
        "value": 1, 
        "size": 1
      }, 
      {
        "disposition": "const", 
        "type": "TransactionType", 
        "name": "TRANSACTION_TYPE", 
        "value": "AGGREGATE_BONDED"
      }, 
      {
        "signedness": "unsigned", 
        "type": "byte", 
        "name": "size", 
        "comments": "Entity size in bytes.\nThis size includes the header and the full payload of the entity. I.e, the size field matches the size reported in the structure documentation (plus the variable part, if there is any).", 
        "size": 4
      }, 
      {
        "value": 0, 
        "name": "verifiable_entity_header_reserved_1", 
        "disposition": "reserved", 
        "signedness": "unsigned", 
        "type": "byte", 
        "comments": "Reserved padding to align Signature to an 8-byte boundary.", 
        "size": 4
      }, 
      {
        "type": "Signature", 
        "name": "signature", 
        "comments": "Entity's signature generated by the signing account."
      }, 
      {
        "type": "PublicKey", 
        "name": "signer_public_key", 
        "comments": "Public key of the signer of the entity."
      }, 
      {
        "value": 0, 
        "name": "entity_body_reserved_1", 
        "disposition": "reserved", 
        "signedness": "unsigned", 
        "type": "byte", 
        "comments": "Reserved padding to align end of EntityBody to an 8-byte boundary.", 
        "size": 4
      }, 
      {
        "signedness": "unsigned", 
        "type": "byte", 
        "name": "version", 
        "comments": "Version of this structure.", 
        "size": 1
      }, 
      {
        "type": "NetworkType", 
        "name": "network", 
        "comments": "Network on which this entity was created."
      }, 
      {
        "type": "TransactionType", 
        "name": "type", 
        "comments": "transaction type"
      }, 
      {
        "type": "Amount", 
        "name": "fee", 
        "comments": "transaction fee"
      }, 
      {
        "type": "Timestamp", 
        "name": "deadline", 
        "comments": "transaction deadline"
      }, 
      {
        "type": "Hash256", 
        "name": "transactions_hash", 
        "comments": "Hash of the aggregate's transaction."
      }, 
      {
        "signedness": "unsigned", 
        "type": "byte", 
        "name": "payload_size", 
        "comments": "Transaction payload size in bytes.\nThis is the total number of bytes occupied by all embedded transactions, including any padding present.", 
        "size": 4
      }, 
      {
        "value": 0, 
        "name": "aggregate_transaction_header_reserved_1", 
        "disposition": "reserved", 
        "signedness": "unsigned", 
        "type": "byte", 
        "comments": "Reserved padding to align end of AggregateTransactionHeader to an 8-byte boundary.", 
        "size": 4
      }, 
      {
        "name": "transactions", 
        "disposition": "array sized", 
        "alignment": 8, 
        "type": "EmbeddedTransaction", 
        "comments": "Embedded transaction data.\nTransactions are variable-sized and the total payload size is in bytes.\nEmbedded transactions cannot be aggregates.", 
        "size": "payload_size"
      }, 
      {
        "name": "cosignatures", 
        "type": "Cosignature", 
        "comments": "Cosignatures data.\nFills up remaining body space after transactions.", 
        "disposition": "array fill", 
        "size": 0
      }
    ], 
    "factory_type": "Transaction", 
    "comments": "Propose an arrangement of transactions between different accounts.\nUse this transaction when not all required signatures are available when the transaction is created.\nMissing signatures must be provided using a Cosignature or DetachedCosignature.\nTo prevent spam attacks, before trying to announce this transaction a HashLockTransaction must be successfully announced and confirmed.", 
    "name": "AggregateBondedTransaction", 
    "initializers": [
      {
        "target_property_name": "version", 
        "value": "TRANSACTION_VERSION"
      }, 
      {
        "target_property_name": "type", 
        "value": "TRANSACTION_TYPE"
      }
    ], 
    "discriminator": [
      "type"
    ], 
    "type": "struct", 
    "size": "size"
  }
]